import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/JobDetail.jsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=705388fd"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=705388fd"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useEffect = __vite__cjsImport3_react["useEffect"]; const useState = __vite__cjsImport3_react["useState"];
import StatusBadge from "/src/components/StatusBadge.jsx";
function formatTimestamp(seconds) {
  if (typeof seconds !== "number" || Number.isNaN(seconds) || !Number.isFinite(seconds)) {
    return "00:00:00";
  }
  const totalSeconds = Math.max(0, Math.round(seconds));
  const hours = Math.floor(totalSeconds / 3600);
  const minutes = Math.floor(totalSeconds % 3600 / 60);
  const secs = totalSeconds % 60;
  return [hours, minutes, secs].map((value) => String(value).padStart(2, "0")).join(":");
}
function formatDuration(seconds) {
  if (typeof seconds !== "number" || Number.isNaN(seconds) || !Number.isFinite(seconds)) {
    return "0s";
  }
  const totalSeconds = Math.max(0, Math.round(seconds));
  const hours = Math.floor(totalSeconds / 3600);
  const minutes = Math.floor(totalSeconds % 3600 / 60);
  const secs = totalSeconds % 60;
  if (hours > 0) {
    return `${hours}h ${minutes}m ${secs}s`;
  }
  if (minutes > 0) {
    return `${minutes}m ${secs}s`;
  }
  return `${secs}s`;
}
export default function JobDetail({ job, logs, isLoadingLogs }) {
  _s();
  const [speakerData, setSpeakerData] = useState(null);
  const [isLoadingSpeakers, setIsLoadingSpeakers] = useState(false);
  const [speakersError, setSpeakersError] = useState(null);
  const segmentsOutput = job?.outputs?.find((output) => output.filename === "segments.json");
  const jobId = job?.id ?? null;
  const jobUpdatedAt = job?.updatedAt ?? null;
  const segmentsFilename = segmentsOutput?.filename ?? null;
  const segmentsKey = jobId && segmentsFilename ? `${jobId}:${segmentsFilename}:${jobUpdatedAt}` : null;
  useEffect(() => {
    let isMounted = true;
    if (!jobId || !segmentsFilename || !segmentsKey) {
      setSpeakerData(null);
      setSpeakersError(null);
      setIsLoadingSpeakers(false);
      return () => {
        isMounted = false;
      };
    }
    const controller = new AbortController();
    setSpeakerData(null);
    setIsLoadingSpeakers(true);
    setSpeakersError(null);
    async function fetchSegments() {
      try {
        const response = await fetch(`/api/assets/${jobId}/${segmentsFilename}`, {
          signal: controller.signal
        });
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}`);
        }
        const payload = await response.json();
        if (isMounted) {
          setSpeakerData(payload);
        }
      } catch (error) {
        if (isMounted) {
          const err = error instanceof Error ? error : new Error("Erreur inconnue");
          if (err.name !== "AbortError") {
            setSpeakersError(err.message);
          }
        }
      } finally {
        if (isMounted) {
          setIsLoadingSpeakers(false);
        }
      }
    }
    fetchSegments();
    return () => {
      isMounted = false;
      controller.abort();
    };
  }, [jobId, segmentsFilename, segmentsKey]);
  if (!job) {
    return /* @__PURE__ */ jsxDEV("p", { children: "Sélectionnez un traitement pour afficher les détails." }, void 0, false, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
      lineNumber: 114,
      columnNumber: 12
    }, this);
  }
  const hasSegmentsOutput = job.outputs?.some((output) => output.filename === "segments.json");
  return /* @__PURE__ */ jsxDEV("div", { className: "job-detail", children: [
    /* @__PURE__ */ jsxDEV("header", { className: "job-detail-header", children: [
      /* @__PURE__ */ jsxDEV("div", { children: [
        /* @__PURE__ */ jsxDEV("h2", { className: "section-title", children: [
          job.filename,
          /* @__PURE__ */ jsxDEV(StatusBadge, { status: job.status }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
            lineNumber: 125,
            columnNumber: 13
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 123,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("p", { className: "job-meta", children: [
          "Déclenché le ",
          new Date(job.createdAt).toLocaleString(),
          " • Dernière mise à jour ",
          new Date(job.updatedAt).toLocaleString()
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 127,
          columnNumber: 11
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 122,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ jsxDEV("div", { className: "job-progress large", children: /* @__PURE__ */ jsxDEV("div", { className: "job-progress-bar", style: { width: `${job.progress ?? 0}%` } }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 132,
        columnNumber: 11
      }, this) }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 131,
        columnNumber: 9
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
      lineNumber: 121,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ jsxDEV("section", { "aria-labelledby": "job-outputs", children: [
      /* @__PURE__ */ jsxDEV("h3", { id: "job-outputs", children: "Exports disponibles" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 137,
        columnNumber: 9
      }, this),
      job.outputs?.length ? /* @__PURE__ */ jsxDEV("div", { className: "asset-list", children: job.outputs.map(
        (output) => /* @__PURE__ */ jsxDEV(
          "a",
          {
            className: "asset-link",
            href: `/api/assets/${job.id}/${output.filename}`,
            target: "_blank",
            rel: "noreferrer",
            children: [
              /* @__PURE__ */ jsxDEV("span", { children: output.label }, void 0, false, {
                fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
                lineNumber: 148,
                columnNumber: 17
              }, this),
              /* @__PURE__ */ jsxDEV("span", { className: "asset-meta", children: output.mimeType }, void 0, false, {
                fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
                lineNumber: 149,
                columnNumber: 17
              }, this)
            ]
          },
          output.filename,
          true,
          {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
            lineNumber: 141,
            columnNumber: 11
          },
          this
        )
      ) }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 139,
        columnNumber: 9
      }, this) : /* @__PURE__ */ jsxDEV("p", { children: "Aucun export n'est encore disponible." }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 154,
        columnNumber: 9
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
      lineNumber: 136,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ jsxDEV("section", { "aria-labelledby": "job-speakers", children: [
      /* @__PURE__ */ jsxDEV("h3", { id: "job-speakers", children: "Interventions par speaker" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 159,
        columnNumber: 9
      }, this),
      !hasSegmentsOutput && /* @__PURE__ */ jsxDEV("p", { children: "Données speaker non disponibles pour ce traitement." }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 160,
        columnNumber: 32
      }, this),
      hasSegmentsOutput && isLoadingSpeakers && /* @__PURE__ */ jsxDEV("p", { children: "Chargement des segments…" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 161,
        columnNumber: 52
      }, this),
      hasSegmentsOutput && speakersError && /* @__PURE__ */ jsxDEV("p", { className: "text-error", children: [
        "Impossible de charger les segments : ",
        speakersError
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 163,
        columnNumber: 9
      }, this),
      hasSegmentsOutput && !isLoadingSpeakers && !speakersError && speakerData && /* @__PURE__ */ jsxDEV("div", { className: "speaker-section", children: [
        speakerData.speakers?.length ? /* @__PURE__ */ jsxDEV("ul", { className: "speaker-stats", children: speakerData.speakers.map(
          (speaker) => /* @__PURE__ */ jsxDEV("li", { children: [
            /* @__PURE__ */ jsxDEV("span", { className: "label", children: speaker.label }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 171,
              columnNumber: 21
            }, this),
            /* @__PURE__ */ jsxDEV("span", { className: "meta", children: [
              speaker.segmentCount,
              " intervention",
              speaker.segmentCount > 1 ? "s" : "",
              " •",
              " ",
              formatDuration(speaker.totalDuration)
            ] }, void 0, true, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 172,
              columnNumber: 21
            }, this)
          ] }, speaker.id, true, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
            lineNumber: 170,
            columnNumber: 13
          }, this)
        ) }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 168,
          columnNumber: 11
        }, this) : /* @__PURE__ */ jsxDEV("p", { children: "Aucun speaker identifié." }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 180,
          columnNumber: 11
        }, this),
        speakerData.segments?.length ? /* @__PURE__ */ jsxDEV("div", { className: "segment-timeline", role: "list", children: speakerData.segments.map(
          (segment) => /* @__PURE__ */ jsxDEV("div", { className: "segment-row", role: "listitem", children: [
            /* @__PURE__ */ jsxDEV("div", { className: "time-range", children: [
              formatTimestamp(segment.start),
              " – ",
              formatTimestamp(segment.end)
            ] }, void 0, true, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 186,
              columnNumber: 21
            }, this),
            /* @__PURE__ */ jsxDEV("div", { className: "speaker-label", children: segment.speakerLabel || "Speaker ?" }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 189,
              columnNumber: 21
            }, this),
            /* @__PURE__ */ jsxDEV("div", { className: "segment-text", children: segment.text || /* @__PURE__ */ jsxDEV("em", { children: "(Silence)" }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 190,
              columnNumber: 68
            }, this) }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 190,
              columnNumber: 21
            }, this)
          ] }, segment.index, true, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
            lineNumber: 185,
            columnNumber: 13
          }, this)
        ) }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 183,
          columnNumber: 11
        }, this) : /* @__PURE__ */ jsxDEV("p", { children: "Aucune découpe segmentée disponible." }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 195,
          columnNumber: 11
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 166,
        columnNumber: 9
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
      lineNumber: 158,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ jsxDEV("section", { "aria-labelledby": "job-logs", children: [
      /* @__PURE__ */ jsxDEV("h3", { id: "job-logs", children: "Journal du pipeline" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 202,
        columnNumber: 9
      }, this),
      isLoadingLogs && /* @__PURE__ */ jsxDEV("p", { children: "Chargement des logs…" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 203,
        columnNumber: 27
      }, this),
      /* @__PURE__ */ jsxDEV("div", { className: "logs", children: [
        logs.map(
          (entry, index) => /* @__PURE__ */ jsxDEV("div", { className: "log-entry", children: [
            /* @__PURE__ */ jsxDEV("div", { className: "meta", children: [
              new Date(entry.timestamp).toLocaleTimeString(),
              " • ",
              entry.level?.toUpperCase()
            ] }, void 0, true, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 207,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("div", { children: entry.message }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
              lineNumber: 210,
              columnNumber: 15
            }, this)
          ] }, `${entry.timestamp}-${index}`, true, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
            lineNumber: 206,
            columnNumber: 11
          }, this)
        ),
        !logs.length && /* @__PURE__ */ jsxDEV("p", { children: "Aucun événement pour le moment." }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
          lineNumber: 213,
          columnNumber: 28
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
        lineNumber: 204,
        columnNumber: 9
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
      lineNumber: 201,
      columnNumber: 7
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx",
    lineNumber: 120,
    columnNumber: 5
  }, this);
}
_s(JobDetail, "aqZybi4Kkkl73meQzhDbAAOvzSs=");
_c = JobDetail;
var _c;
$RefreshReg$(_c, "JobDetail");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Projets/CRAutomatique2/frontend/src/components/JobDetail.jsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,