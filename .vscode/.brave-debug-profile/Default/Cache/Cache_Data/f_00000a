import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/ConfigPanel.jsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=705388fd"; const Fragment = __vite__cjsImport0_react_jsxDevRuntime["Fragment"]; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=705388fd"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useEffect = __vite__cjsImport3_react["useEffect"]; const useState = __vite__cjsImport3_react["useState"];
import "/src/styles/config-panel.css";
const computeTypes = ["auto", "int8", "float32"];
const whisperModels = [
  {
    name: "tiny",
    description: "Le plus rapide, qualité basique",
    multilingual: true,
    sizeInMemory: "~1 GB",
    relativeDuration: "~32x plus rapide que temps réel"
  },
  {
    name: "base",
    description: "Rapide, qualité correcte",
    multilingual: true,
    sizeInMemory: "~1 GB",
    relativeDuration: "~16x plus rapide que temps réel"
  },
  {
    name: "small",
    description: "Équilibre vitesse/qualité",
    multilingual: true,
    sizeInMemory: "~2 GB",
    relativeDuration: "~6x plus rapide que temps réel"
  },
  {
    name: "medium",
    description: "Haute qualité, plus lent",
    multilingual: true,
    sizeInMemory: "~5 GB",
    relativeDuration: "~2x plus rapide que temps réel"
  },
  {
    name: "large-v3",
    description: "Meilleure qualité possible",
    multilingual: true,
    sizeInMemory: "~10 GB",
    relativeDuration: "~1x temps réel"
  }
];
export default function ConfigPanel({ config, onSave }) {
  _s();
  const [localConfig, setLocalConfig] = useState(config);
  const [apiKeyInput, setApiKeyInput] = useState("");
  const [clearApiKey, setClearApiKey] = useState(false);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(false);
  useEffect(() => {
    setLocalConfig(config);
    setApiKeyInput("");
    setClearApiKey(false);
  }, [config]);
  const updateSection = (path, value) => {
    setLocalConfig((prev) => {
      const next = typeof structuredClone === "function" ? structuredClone(prev) : JSON.parse(JSON.stringify(prev));
      let cursor = next;
      const lastKey = path[path.length - 1];
      for (const key of path.slice(0, -1)) {
        cursor[key] = { ...cursor[key] };
        cursor = cursor[key];
      }
      cursor[lastKey] = value;
      return next;
    });
  };
  const handleSubmit = async (event) => {
    event.preventDefault();
    setSaving(true);
    setError(null);
    setSuccess(false);
    try {
      const payload = typeof structuredClone === "function" ? structuredClone(localConfig) : JSON.parse(JSON.stringify(localConfig));
      if (payload.llm) {
        delete payload.llm.hasApiKey;
        const trimmedApiKey = apiKeyInput.trim();
        if (trimmedApiKey.length > 0) {
          payload.llm.apiKey = trimmedApiKey;
        } else if (clearApiKey) {
          payload.llm.apiKey = null;
        } else {
          delete payload.llm.apiKey;
        }
      }
      await onSave(payload);
      setSuccess(true);
      setApiKeyInput("");
      setClearApiKey(false);
    } catch (err) {
      setError(err.message);
    } finally {
      setSaving(false);
    }
  };
  const hasStoredApiKey = Boolean(localConfig.llm?.hasApiKey);
  const toggleClearApiKey = () => {
    setApiKeyInput("");
    setClearApiKey((prev) => !prev);
  };
  return /* @__PURE__ */ jsxDEV("section", { className: "card", children: [
    /* @__PURE__ */ jsxDEV("h2", { className: "section-title", children: "Configuration du pipeline" }, void 0, false, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
      lineNumber: 137,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ jsxDEV("form", { className: "config-form", onSubmit: handleSubmit, children: [
      /* @__PURE__ */ jsxDEV("fieldset", { children: [
        /* @__PURE__ */ jsxDEV("legend", { children: "Whisper local" }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 140,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "whisper-model", children: "Modèle" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 142,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "select",
            {
              id: "whisper-model",
              value: localConfig.whisper.model,
              onChange: (event) => updateSection(["whisper", "model"], event.target.value),
              children: whisperModels.map(
                (model) => /* @__PURE__ */ jsxDEV("option", { value: model.name, children: [
                  model.name,
                  " - ",
                  model.description
                ] }, model.name, true, {
                  fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
                  lineNumber: 149,
                  columnNumber: 15
                }, this)
              )
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 143,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ jsxDEV("small", { className: "help-text", children: [
            whisperModels.find((m) => m.name === localConfig.whisper.model)?.relativeDuration,
            " • ",
            whisperModels.find((m) => m.name === localConfig.whisper.model)?.sizeInMemory,
            " de mémoire requise"
          ] }, void 0, true, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 154,
            columnNumber: 13
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 141,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "whisper-language", children: "Langue (optionnel)" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 161,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              id: "whisper-language",
              value: localConfig.whisper.language ?? "",
              onChange: (event) => updateSection(["whisper", "language"], event.target.value)
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 162,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 160,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "whisper-compute", children: "Type de calcul" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 169,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "select",
            {
              id: "whisper-compute",
              value: localConfig.whisper.computeType,
              onChange: (event) => updateSection(["whisper", "computeType"], event.target.value),
              children: computeTypes.map(
                (option) => /* @__PURE__ */ jsxDEV("option", { value: option, children: option }, option, false, {
                  fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
                  lineNumber: 176,
                  columnNumber: 15
                }, this)
              )
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 170,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 168,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "whisper-batch", children: "Taille de batch" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 183,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              id: "whisper-batch",
              type: "number",
              min: "0",
              value: localConfig.whisper.batchSize ?? 0,
              onChange: (event) => updateSection(["whisper", "batchSize"], Number(event.target.value))
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 184,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 182,
          columnNumber: 11
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
        lineNumber: 139,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ jsxDEV("fieldset", { children: [
        /* @__PURE__ */ jsxDEV("legend", { children: "OpenAI" }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 195,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "llm-model", children: "Modèle" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 197,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              id: "llm-model",
              value: localConfig.llm.model,
              onChange: (event) => updateSection(["llm", "model"], event.target.value)
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 198,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 196,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "llm-temperature", children: "Température" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 205,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              id: "llm-temperature",
              type: "number",
              step: "0.1",
              value: localConfig.llm.temperature,
              onChange: (event) => updateSection(["llm", "temperature"], Number(event.target.value))
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 206,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 204,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "llm-max-tokens", children: "Tokens maximum" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 215,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              id: "llm-max-tokens",
              type: "number",
              min: "1",
              value: localConfig.llm.maxOutputTokens,
              onChange: (event) => updateSection(["llm", "maxOutputTokens"], Number(event.target.value))
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 216,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 214,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "input-group", children: [
          /* @__PURE__ */ jsxDEV("label", { htmlFor: "llm-api-key", children: "Clé OpenAI" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 225,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              id: "llm-api-key",
              type: "password",
              value: apiKeyInput,
              placeholder: hasStoredApiKey ? "Clé enregistrée — saisir pour remplacer" : "Saisissez votre clé OpenAI",
              onChange: (event) => {
                setApiKeyInput(event.target.value);
                if (clearApiKey) {
                  setClearApiKey(false);
                }
              },
              autoComplete: "off"
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 226,
              columnNumber: 13
            },
            this
          ),
          hasStoredApiKey ? /* @__PURE__ */ jsxDEV("p", { className: "input-hint", children: clearApiKey ? /* @__PURE__ */ jsxDEV(Fragment, { children: [
            "La clé enregistrée sera supprimée lors de la sauvegarde.",
            " ",
            /* @__PURE__ */ jsxDEV("button", { type: "button", className: "link-button", onClick: toggleClearApiKey, children: "Annuler" }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 244,
              columnNumber: 21
            }, this),
            "."
          ] }, void 0, true, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 242,
            columnNumber: 15
          }, this) : /* @__PURE__ */ jsxDEV(Fragment, { children: [
            "Une clé est actuellement enregistrée. Laissez le champ vide pour la conserver, saisissez une nouvelle valeur pour la remplacer ou",
            " ",
            /* @__PURE__ */ jsxDEV("button", { type: "button", className: "link-button", onClick: toggleClearApiKey, children: "supprimez la clé" }, void 0, false, {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 253,
              columnNumber: 21
            }, this),
            "."
          ] }, void 0, true, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 250,
            columnNumber: 15
          }, this) }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 240,
            columnNumber: 13
          }, this) : /* @__PURE__ */ jsxDEV("p", { className: "input-hint", children: "Votre clé sera stockée localement et utilisée uniquement pour la synthèse." }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 261,
            columnNumber: 13
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 224,
          columnNumber: 11
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
        lineNumber: 194,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ jsxDEV("fieldset", { children: [
        /* @__PURE__ */ jsxDEV("legend", { children: "Options du pipeline" }, void 0, false, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 267,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("label", { className: "toggle", children: [
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              type: "checkbox",
              checked: localConfig.pipeline.enableSummaries,
              onChange: (event) => updateSection(["pipeline", "enableSummaries"], event.target.checked)
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 269,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ jsxDEV("span", { children: "Activer la synthèse OpenAI" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 274,
            columnNumber: 13
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 268,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("label", { className: "toggle", children: [
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              type: "checkbox",
              checked: localConfig.pipeline.enableSubtitles,
              onChange: (event) => updateSection(["pipeline", "enableSubtitles"], event.target.checked)
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 277,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ jsxDEV("span", { children: "Générer les sous-titres VTT" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 282,
            columnNumber: 13
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 276,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("label", { className: "toggle", children: [
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              type: "checkbox",
              checked: Boolean(localConfig.pipeline.enableDiarization),
              onChange: (event) => updateSection(["pipeline", "enableDiarization"], event.target.checked)
            },
            void 0,
            false,
            {
              fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
              lineNumber: 285,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ jsxDEV("span", { children: "Activer la diarisation des locuteurs" }, void 0, false, {
            fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
            lineNumber: 290,
            columnNumber: 13
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
          lineNumber: 284,
          columnNumber: 11
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
        lineNumber: 266,
        columnNumber: 9
      }, this),
      error && /* @__PURE__ */ jsxDEV("p", { className: "toast error", children: error }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
        lineNumber: 294,
        columnNumber: 19
      }, this),
      success && /* @__PURE__ */ jsxDEV("p", { className: "toast success", children: "Configuration sauvegardée" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
        lineNumber: 295,
        columnNumber: 21
      }, this),
      /* @__PURE__ */ jsxDEV("button", { className: "button primary", type: "submit", disabled: saving, children: saving ? "Sauvegarde…" : "Sauvegarder" }, void 0, false, {
        fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
        lineNumber: 297,
        columnNumber: 9
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
      lineNumber: 138,
      columnNumber: 7
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx",
    lineNumber: 136,
    columnNumber: 5
  }, this);
}
_s(ConfigPanel, "/B19fgVr07Urk37AKUyDs68TNAc=");
_c = ConfigPanel;
var _c;
$RefreshReg$(_c, "ConfigPanel");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Projets/CRAutomatique2/frontend/src/components/ConfigPanel.jsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,